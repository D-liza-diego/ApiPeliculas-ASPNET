// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoAPi;

#nullable disable

namespace ProyectoAPi.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProyectoAPi.Entidades.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Actores");
                });

            modelBuilder.Entity("ProyectoAPi.Entidades.Genero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("ProyectoAPi.Entidades.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaEstreno")
                        .HasColumnType("datetime2");

                    b.Property<bool>("disponible")
                        .HasColumnType("bit");

                    b.Property<string>("poster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("ProyectoAPi.Entidades.PeliculaActor", b =>
                {
                    b.Property<int>("actorid")
                        .HasColumnType("int");

                    b.Property<int>("peliculaid")
                        .HasColumnType("int");

                    b.Property<int>("orden")
                        .HasColumnType("int");

                    b.Property<string>("personaje")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("actorid", "peliculaid");

                    b.HasIndex("peliculaid");

                    b.ToTable("PeliculaActores");
                });

            modelBuilder.Entity("ProyectoAPi.Entidades.PeliculaGenero", b =>
                {
                    b.Property<int>("peliculaid")
                        .HasColumnType("int");

                    b.Property<int>("generoid")
                        .HasColumnType("int");

                    b.HasKey("peliculaid", "generoid");

                    b.HasIndex("generoid");

                    b.ToTable("PeliculaGeneros");
                });

            modelBuilder.Entity("ProyectoAPi.Entidades.PeliculaActor", b =>
                {
                    b.HasOne("ProyectoAPi.Entidades.Actor", "actor")
                        .WithMany()
                        .HasForeignKey("actorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoAPi.Entidades.Pelicula", "pelicula")
                        .WithMany()
                        .HasForeignKey("peliculaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("actor");

                    b.Navigation("pelicula");
                });

            modelBuilder.Entity("ProyectoAPi.Entidades.PeliculaGenero", b =>
                {
                    b.HasOne("ProyectoAPi.Entidades.Genero", "genero")
                        .WithMany()
                        .HasForeignKey("generoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoAPi.Entidades.Pelicula", "pelicula")
                        .WithMany()
                        .HasForeignKey("peliculaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("genero");

                    b.Navigation("pelicula");
                });
#pragma warning restore 612, 618
        }
    }
}
